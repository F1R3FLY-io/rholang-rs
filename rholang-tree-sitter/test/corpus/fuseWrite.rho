==============================================
Example fuseWrite.rho
==============================================

new MapStore, stdout(`rho:io:stdout`) in {
   contract MapStore(@action, @key, @value, return) = {
     new map(`rho:registry:RHO_MAP`) in {
       match action {
         "create" => {
           stdout!("create called") |
           map!({key: value}) |
           return!(("Created map with key", key, "and value", value))
         }
         "update" => {
           for(@m <- map) {
             map!(m.set(key, value)) |
             return!(("Updated map with key", key, "and value", value))
           }
         }
         "delete" => {
           for(@m <- map) {
             map!(m.delete(key)) |
             return!(("Deleted key", key, "from map"))
           }
         }
         _ => {
           return!(("Invalid action"))
         }
       }
     }
   } |

   // Test the contract
   new ret in {
     stdout!("asfdadfadsfadsdas") |
     MapStore!("create", "key1", "value1", *ret) |
     for(@msg <- ret) { 
        stdout!(msg) |
        stdout!("this actually got hit")
        } |
     stdout!("asfdadfadsfadsdas")
   }
 }

---

(source_file
  (new
    decls: (name_decls
      (name_decl
        (var))
      (name_decl
        (var)
        uri: (uri_literal)))
    proc: (block
      (par
        (contract
          name: (var)
          formals: (names
            (quote
              (var))
            (quote
              (var))
            (quote
              (var))
            (var))
          proc: (block
            (new
              decls: (name_decls
                (name_decl
                  (var)
                  uri: (uri_literal)))
              proc: (block
                (match
                  expression: (var)
                  cases: (cases
                    (case
                      pattern: (string_literal)
                      proc: (block
                        (par
                          (par
                            (send
                              channel: (var)
                              send_type: (send_single)
                              inputs: (inputs
                                (string_literal)))
                            (send
                              channel: (var)
                              send_type: (send_single)
                              inputs: (inputs
                                (collection
                                  (map
                                    (key_value_pair
                                      key: (var)
                                      value: (var)))))))
                          (send
                            channel: (var)
                            send_type: (send_single)
                            inputs: (inputs
                              (collection
                                (tuple
                                  (string_literal)
                                  (var)
                                  (string_literal)
                                  (var))))))))
                    (case
                      pattern: (string_literal)
                      proc: (block
                        (input
                          receipts: (receipts
                            (receipt
                              (linear_bind
                                names: (names
                                  (quote
                                    (var)))
                                input: (simple_source
                                  (var)))))
                          proc: (block
                            (par
                              (send
                                channel: (var)
                                send_type: (send_single)
                                inputs: (inputs
                                  (method
                                    receiver: (var)
                                    name: (var)
                                    args: (args
                                      (var)
                                      (var)))))
                              (send
                                channel: (var)
                                send_type: (send_single)
                                inputs: (inputs
                                  (collection
                                    (tuple
                                      (string_literal)
                                      (var)
                                      (string_literal)
                                      (var))))))))))
                    (case
                      pattern: (string_literal)
                      proc: (block
                        (input
                          receipts: (receipts
                            (receipt
                              (linear_bind
                                names: (names
                                  (quote
                                    (var)))
                                input: (simple_source
                                  (var)))))
                          proc: (block
                            (par
                              (send
                                channel: (var)
                                send_type: (send_single)
                                inputs: (inputs
                                  (method
                                    receiver: (var)
                                    name: (var)
                                    args: (args
                                      (var)))))
                              (send
                                channel: (var)
                                send_type: (send_single)
                                inputs: (inputs
                                  (collection
                                    (tuple
                                      (string_literal)
                                      (var)
                                      (string_literal))))))))))
                    (case
                      pattern: (wildcard)
                      proc: (block
                        (send
                          channel: (var)
                          send_type: (send_single)
                          inputs: (inputs
                            (string_literal)))))))))))
        (line_comment)
        (new
          decls: (name_decls
            (name_decl
              (var)))
          proc: (block
            (par
              (par
                (par
                  (send
                    channel: (var)
                    send_type: (send_single)
                    inputs: (inputs
                      (string_literal)))
                  (send
                    channel: (var)
                    send_type: (send_single)
                    inputs: (inputs
                      (string_literal)
                      (string_literal)
                      (string_literal)
                      (eval
                        (var)))))
                (input
                  receipts: (receipts
                    (receipt
                      (linear_bind
                        names: (names
                          (quote
                            (var)))
                        input: (simple_source
                          (var)))))
                  proc: (block
                    (par
                      (send
                        channel: (var)
                        send_type: (send_single)
                        inputs: (inputs
                          (var)))
                      (send
                        channel: (var)
                        send_type: (send_single)
                        inputs: (inputs
                          (string_literal)))))))
              (send
                channel: (var)
                send_type: (send_single)
                inputs: (inputs
                  (string_literal))))))))))
