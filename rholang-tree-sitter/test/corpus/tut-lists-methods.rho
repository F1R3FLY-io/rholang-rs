==============================================
List methods
==============================================

new stdout(`rho:io:stdout`) in {

  // prints "b" because lists are 0-indexed
  stdout!(["a", "b", "c", "d"].nth(1)) |


  // prints ["b", "c"]
  // lower bound is inclusive, upper is exclusive
  stdout!(["a", "b", "c", "d"].slice(1, 3)) |

  // prints 4
  stdout!(["a", "b", "c", "d"].length()) |

  // prints ["a", "b", "c", "d"]
  stdout!(["a", "b"] ++ ["c", "d"]) |

  // prints ["a", "b"]
  stdout!(["a", "b"].toList())
}

---

(source_file
  (new
    decls: (name_decls
      (name_decl
        (var)
        uri: (uri_literal)))
    proc: (block
      (line_comment)
      (par
        (par
          (par
            (par
              (send
                channel: (var)
                send_type: (send_single)
                inputs: (inputs
                  (method
                    receiver: (collection
                      (list
                        (string_literal)
                        (string_literal)
                        (string_literal)
                        (string_literal)))
                    name: (var)
                    args: (args
                      (long_literal)))))
              (line_comment)
              (line_comment)
              (send
                channel: (var)
                send_type: (send_single)
                inputs: (inputs
                  (method
                    receiver: (collection
                      (list
                        (string_literal)
                        (string_literal)
                        (string_literal)
                        (string_literal)))
                    name: (var)
                    args: (args
                      (long_literal)
                      (long_literal))))))
            (line_comment)
            (send
              channel: (var)
              send_type: (send_single)
              inputs: (inputs
                (method
                  receiver: (collection
                    (list
                      (string_literal)
                      (string_literal)
                      (string_literal)
                      (string_literal)))
                  name: (var)
                  args: (args)))))
          (line_comment)
          (send
            channel: (var)
            send_type: (send_single)
            inputs: (inputs
              (concat
                (collection
                  (list
                    (string_literal)
                    (string_literal)))
                (collection
                  (list
                    (string_literal)
                    (string_literal)))))))
        (line_comment)
        (send
          channel: (var)
          send_type: (send_single)
          inputs: (inputs
            (method
              receiver: (collection
                (list
                  (string_literal)
                  (string_literal)))
              name: (var)
              args: (args))))))))
