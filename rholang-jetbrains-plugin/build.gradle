plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.17.3'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'base'
}

group 'org.rholang'
version '1.0.1'

// Set Java compatibility
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// Configure Java toolchain
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = '2025.2'
    type = 'RR' // Target RustRover platform
    plugins = []
}

patchPluginXml {
    sinceBuild = "252"
    changeNotes = """
      Initial release of the Rholang plugin.<br>
      <em>Features:</em>
      <ul>
        <li>Syntax highlighting for Rholang files</li>
        <li>File type recognition for .rho files</li>
      </ul>
      """
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

// Configure Checkstyle
checkstyle {
    toolVersion = '10.3.3'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    maxWarnings = 0
    ignoreFailures = true
}

// Configure PMD
pmd {
    toolVersion = '6.55.0'
    ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
    ignoreFailures = true
}

// Configure JaCoCo
jacoco {
    // Use a version compatible with JDK 21 class files (major version 65)
    toolVersion = '0.8.11'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

// Make sure JaCoCo report is generated after tests run
test.finalizedBy jacocoTestReport

// Task to build the rholang-parser library with j4rs support
task buildRholangParser(type: Exec) {
    workingDir rootProject.projectDir
    commandLine 'cargo', 'build', '--release', '-p', 'rholang-parser'
}

// No need for createJ4rsJar task as we're using j4rs from Maven Central

// Create lib directory if it doesn't exist
task createLibDir {
    doLast {
        mkdir "${project.buildDir}/resources/main/lib"
    }
}

// Task to copy the rholang-parser library to the plugin distribution
task copyRholangParser(type: Copy, dependsOn: [createLibDir, buildRholangParser]) {
    from "${rootProject.projectDir}/target/release"
    include "librholang_parser.*"
    into "${project.buildDir}/resources/main/lib"
}

// Make the plugin build depend on the copyRholangParser task
processResources.dependsOn copyRholangParser

// Disable building searchable options to avoid headless indexing issues in CI/local
// See https://github.com/JetBrains/gradle-intellij-plugin/issues/2046
tasks.named('buildSearchableOptions') {
    enabled = false
}
